CONTRACT_TYPE:NEEDS[KolonyTools&CommunityResourcePack]
{
    name = USIMining_Harvest_Ore

    // Reference to a CONTRACT_GROUP node which supplies additional rules
    // for limiting the number of contracts within a given group.
    group = USIMining

    title = Harvest @/harvestResource from @/targetBody
    genericTitle = Harvest @/harvestResource
    synopsis = make blurby @/targetBody synopsis about needing @/harvestGoal units of @/harvestResource from @targetBody.
    completedMessage = We have harvested @/harvestResource from @targetBody.
    notes = TODO notes

    description = Put XYZ into KEO

    // cancellable = true
    // declinable = true
    minExpiry = 5.0
    maxExpiry = 30.0
    deadline = Random(1.0 * 426, 1.3 * 426) * @/smaRatio76 + Random(1000, 1500) // days
    prestige = Trivial

    //maxCompletions = 4 // see HaveFewerThanNRelays which is a better way to limit quantity
    maxSimultaneous = Min(@/validBodiesCount, 3)

    rewardScience = 0.0
    failureReputation = Random(2,4)
    rewardReputation = Random(3,6)
    failureFunds = Random(10000,20000) * @/smaRatioCubeRoot
    advanceFunds = Random(20000,30000) * @/smaRatioCubeRoot
    rewardFunds = Random(10000,20000) * @/smaRatio45 + (@/harvestGoal / 1000) * 50000

    targetBody = @validBodies.Random()

    DATA
    {
        type = List<CelestialBody>
        title = Get list of target bodies
        validBodies = LandedBodies().Where(cb => !cb.IsHomeWorld() && cb.HasSurface())
    }

    DATA
    {
        type = int
        title = Candidate celestial body count
        validBodiesCount = @/validBodies.Count()
    }

    DATA
    {
        type = double
        title = calculations for SMAs
        // Kerbin SMA = 13.6 Gm
        // Jool SMA = 68.8 Gm (about 5.06x, 2.50 sqrt, 1.72 cube)
        // Eeloo SMA = 90.1 Gm (about 6.6x, 2.57 sqrt, 1.88 cube)
        // Sarnus SMA = 126 Gm (9.26x, 3.04 sqrt, 2.10 cube)
        // Urlum SMA = 254 Gm (18.7x, 4.32 sqrt, 2.65 cube)
        // Neidon SMA = 409 Gm (about 30.1x, 5.48 sqrt, 3.11 cube)
        // Plock SMA = 536 Gm (39.4x, 6.28 sqrt, 3.40 cube)
        homeworldSma = HomeWorld().SemiMajorAxis()
        smaRatio = @targetBody.SemiMajorAxis() / @/homeworldSma
        smaRatio76 = Pow(@/smaRatio, 7/6)
        smaRatio67 = Pow(@/smaRatio, 6/7)
        smaRatio45 = Pow(@/smaRatio, 4/5)
        smaRatio34 = Pow(@/smaRatio, 3/4)
        smaRatioSqrt = Pow(@/smaRatio, 1/2)
        smaRatioCubeRoot = Pow(@/smaRatio, 1/3)
    }

    DATA
    {
        type = double
        title = Resource quantity
        harvestRate = 0.25
    }

    DATA
    {
        type = string
        title = What to harvest
        harvestResource = Ore
    }

    DATA
    {
        type = int
        title = Harvest goal
        harvestGoal = Random(500,5000)
    }

    PARAMETER
    {
        name = MyVesselParameterGroup
        type = VesselParameterGroup
        title = Place vessel onto surface for @duration

        duration = 90d

        dissassociateVesselsOnContractCompletion = true

        PARAMETER
        {
            name = HasResourceCapacityEC
            type = HasResourceCapacity

            // Default:   Resource: <resource>: <quantity_description>
            title = Have at least @minQuantity electric charge (EC) storage

            resource = ElectricCharge
            minQuantity = 1000
            // maxQuantity = 1000.0
        }

        PARAMETER
        {
            name = PartValidationUSIMRH
            type = PartValidation

            title = Have at least one USI drill

            partModule = ModuleResourceHarvester_USI
        }

        PARAMETER
        {
            name = HasResourceEC
            type = HasResource

            // Default:   Resource: <resource>: <quantity_description>
            title = Maintain at least @minQuantity electric charge

            resource = ElectricCharge
            minQuantity = @../HasResourceCapacityEC/minQuantity * 0.25
            // maxQuantity = 1000
        }

        PARAMETER
        {
            name = ReachState
            type = ReachState
            title = Must be landed and stationary
            maxAcceleration = 0.2
            maxSpeed = 1.0
            situation = LANDED
        }

        PARAMETER
        {
            name = ResourceConsumption
            type = ResourceConsumption
            title = Harvest at least @/harvestRate units per second of @/harvestResource

            // The name of the resource to check for.
            //
            // Type:      Resource
            // Required:  Yes
            //
            resource = Ore

            // Minimum and maximum consumption rate of the resource required.  Note that
            // if negative, this will indicate a production rate instead.
            //
            // Type:      double
            // Required:  No (defaulted)
            // Default:   double.MinValue (minRate)
            //            double.MaxValue (maxRate)
            //
            minRate = @/harvestRate * -1
            //maxRate = 1000.0
        }
    }

    REQUIREMENT // must have already orbited the home world
    {
        name = Orbit
        type = Orbit
        // checkType = // not specified, so either manned or unmanned will count
        targetBody = HomeWorld()
    }

    REQUIREMENT
    {
        name = FoundPlanet
        type = Expression
        title = Found at least one target planet
        expression = @/validBodies.Count() > 0
    }
}



// SAMPLE FROM Squad/Contracts/Contracts.cfg

// ISRU // In Situ Resource Extraction Contracts
// {
// 	MaximumExistent = 9999 // The maximum amount of active or inactive ISRU contracts
// 	Expiration
// 	{
// 		MinimumExpireDays = 1 // The minimum time in days the contract will remain in Mission Control before expiring
// 		MaximumExpireDays = 7 // The maximum time in days the contract will remain in Mission Control before expiring
// 		DeadlineDays = 2982 // How many days the player gets to complete the contract
// 	}
// 	Funds
// 	{
// 		BaseAdvance = 31000 // The base funds advance before planet and difficulty modifiers
// 		BaseReward = 79000 // The base funds completion reward before planet and difficulty modifiers
// 		BaseFailure = 0 // The base funds failure penalty before planet and difficulty modifiers
// 	}
// 	Science
// 	{
// 		BaseReward = 0 // The base science completion reward before difficulty modifiers
// 	}
// 	Reputation
// 	{
// 		BaseReward = 22 // The base reputation completion reward before difficulty modifiers
// 		BaseFailure = 11 // The base reputation failure penalty before difficulty modifiers
// 	}
// 	RESOURCE_REQUEST // A potential request for ore extraction
// 	{
// 		Name = Ore // The resource ID
// 		Title = #autoLOC_500050 //#autoLOC_500050 = ore
// 		Keyword = #autoLOC_500051 //#autoLOC_500051 = Commercial
// 		Module = ModuleResourceHarvester // A part with this module must be researched for this request to appear
// 		DeliveryMultiplier = 1.8 // Reward multiplier on ISRU delivery contract
// 		Forbidden = Sun // A body this resource cannot be extracted from
// 		Forbidden = Jool // A body this resource cannot be extracted from
// 		Trivial // Easy Contracts
// 		{
// 			Amount = 500 // How much to extract in easy contracts
// 			DeliveryChance = 50 // The percent chance for a delivery in easy contracts
// 			FundsMultiplier = 1 // The multiplier this request places on funds in easy contracts
// 			ScienceMultiplier = 1 // The multiplier this request places on science in easy contracts
// 			ReputationMultiplier = 1 // The multiplier this request places on reputation in easy contracts
// 		}
// 		Significant // Medium Contracts
// 		{
// 			Amount = 1000 // How much to extract in medium contracts
// 			DeliveryChance = 65 // The percent chance for a delivery in medium contracts
// 			FundsMultiplier = 1.1 // The multiplier this request places on funds in medium contracts
// 			ScienceMultiplier = 1.1 // The multiplier this request places on science in medium contracts
// 			ReputationMultiplier = 1.1 // The multiplier this request places on reputation in medium contracts
// 		}
// 		Exceptional // Hard Contracts
// 		{
// 			Amount = 2500 // How much to extract in hard contracts
// 			DeliveryChance = 80 // The percent chance for a delivery in hard contracts
// 			FundsMultiplier = 1.3 // The multiplier this request places on funds in hard contracts
// 			ScienceMultiplier = 1.3 // The multiplier this request places on science in hard contracts
// 			ReputationMultiplier = 1.3 // The multiplier this request places on reputation in hard contracts
// 		}
// 	}
// }
